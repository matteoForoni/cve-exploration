#####################
# Import Libraries
#####################

import numpy as np
import os
import pandas as pd
import matplotlib.pyplot as plt
import streamlit as st
import column_descriptions as cd

#####################
# Global Variables
#####################


#####################
# Functions
#####################

#####################
# Main
#####################

project_folder = os.getcwd()

## Reading datasets
cve_df = pd.read_csv(f'{project_folder}\\data\\cve.csv')
products_df = pd.read_csv(f'{project_folder}\\data\\products.csv')
vendors_df = pd.read_csv(f'{project_folder}\\data\\vendors.csv')
vendors_products_df = pd.read_csv(f'{project_folder}\\data\\vendor_product.csv')

# Initializing web page
st.header("CVE Exploration")
st.write('Source dataset:')
st.text('https://www.kaggle.com/datasets/andrewkronser/cve-common-vulnerabilities-and-exposures?select=cve.csv')

#####################
## Data Exploration
#####################

st.subheader('Data Exploration')

# CVE dataframe exploration

st.text('CVE dataframe')
st.write('Dataframe cointaining all CVEs')
st.dataframe(cve_df)
# print(cve_df.info())
# print(cve_df.describe().T)

# Add expander to hide column information if not necessary
with st.expander('Show column description'):
    for col in cve_df.columns:
        st.markdown(f"- ```{col.upper()}```: {cd.get_column_description('cve',col)}") # Using the external file to get column description

# Add expander for columns cointaning null values
with st.expander('Show advanced information'):
    for col in ['access_authentication', 'access_complexity', 'access_vector', 'impact_availability', 'impact_availability', 'impact_integrity']:
        st.markdown(f"**{col.upper()}** column unique values: ```{cve_df[col].unique()}```")
    
# Products dataframe exploration
st.text('Products dataframe')
st.write('Dataframe cointaining all CVEs associated to a product')
st.dataframe(products_df)
# print(products_df.info())
# print(products_df.describe().T)

# Vendors dataframe exploration
st.text('Vendors dataframe')
st.write('Dataframe cointaining all CVEs associated to a vendor')
st.dataframe(vendors_df)
# print(vendors_df.info())
# print(vendors_df.describe().T)

# Vendors dataframe exploration
st.text('Vendors Products dataframe')
st.write('Dataframe cointaining the combination between vendors and products')
st.dataframe(vendors_products_df)
# print(vendors_products_df.info())
# print(vendors_products_df.describe().T)